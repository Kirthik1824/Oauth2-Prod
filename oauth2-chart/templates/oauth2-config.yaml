apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "oauth2-proxy.fullname" . }}-config-template
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "oauth2-proxy.labels" . | nindent 4 }}
    bu: all
data:
  oauth2_proxy.cfg: |
    # OAuth2 Proxy Configuration
    http_address = "{{ .Values.oauth2.httpAddress }}"
    provider = "{{ .Values.oauth2.provider }}"
    
    # These will need to be set in the actual secret:
    # client_id = "your-google-client-id"
    # client_secret = "your-google-client-secret"  
    # cookie_secret = "your-cookie-secret"
    
    redirect_url = "{{ .Values.oauth2.redirectUrl }}"
    email_domain = "{{ .Values.oauth2.emailDomain }}"
    cookie_domain = "{{ .Values.oauth2.cookieDomain }}"
    
    # OAuth2 Proxy flags
    {{- if .Values.oauth2.passAuthorizationHeader }}
    pass_authorization_header = true
    {{- end }}
    {{- if .Values.oauth2.passAccessToken }}
    pass_access_token = true
    {{- end }}
    {{- if .Values.oauth2.passUserHeaders }}
    pass_user_headers = true
    {{- end }}
    {{- if .Values.oauth2.setAuthorizationHeader }}
    set_authorization_header = true
    {{- end }}
    {{- if .Values.oauth2.setXauthrequest }}
    set_xauthrequest = true
    {{- end }}
    {{- if .Values.oauth2.skipProviderButton }}
    skip_provider_button = true
    {{- end }}
    {{- if .Values.oauth2.whitelistDomain }}
    whitelist_domain = "{{ .Values.oauth2.whitelistDomain }}"
    {{- end }}
    {{- if .Values.oauth2.reverseProxy }}
    reverse_proxy = true
    {{- end }}
    
    {{- if .Values.oauth2.googleGroups.enabled }}
    # Google Groups configuration
    google_service_account_json = "{{ .Values.oauth2.mountPath }}/google.json"
    google_admin_email = "{{ .Values.oauth2.googleGroups.adminEmail }}"
    {{- range .Values.oauth2.googleGroups.allowedGroups }}
    google_group = "{{ . }}"
    {{- end }}
    {{- end }} 